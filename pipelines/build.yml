steps:
    - task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@4
      displayName: 'Prepare analysis on SonarQube'
      inputs:
          SonarQube: SonarQube
          scannerMode: CLI
          configMode: manual
          cliProjectKey: '$(Build.Repository.Name)'
          cliProjectName: '$(Build.Repository.Name)'
          cliProjectVersion: '$(Build.BuildNumber)'
          cliSources: '$(System.DefaultWorkingDirectory)'
          extraProperties: |
              sonar.exclusions=node_modules/**,coverage/**,examples/**,docs/**,reports/**,src/**, **/test/**
              sonar.sources=$(System.DefaultWorkingDirectory)
              sonar.language=js
              sonar.sourceEncoding=UTF-8
              sonar.javascript.lcov.reportPaths=coverage/lcov.info
              sonar.coverage.exclusions=test/**,*.test.ts,**/*.test.ts,**/*.config.js, **/*.spec.js, **/*.test.js
              sonar.qualitygate.wait=true
    
    - task: NodeTool@0
      displayName: 'Use Node 18.x'
      inputs:
              versionSpec: '18.x'
              checkLatest: true

    - task: Npm@1
      displayName: 'Install Dependencies'
      inputs:
          workingDir: '$(System.DefaultWorkingDirectory)'
          verbose: false

    - task: Npm@1
      displayName: 'Test and Coverage'
      inputs:
          command: custom
          workingDir: '$(System.DefaultWorkingDirectory)'
          verbose: false
          customCommand: test

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml

    - task: SonarQubeAnalyze@4
      displayName: 'Run Code Analysis'

    - task: SimondeLang.sonar-buildbreaker.sonar-buildbreaker.sonar-buildbreaker@8
      displayName: 'Break build on quality gate failure'
      inputs:
          SonarQube: SonarQube